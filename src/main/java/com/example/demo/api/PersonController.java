package com.example.demo.api;

import com.example.demo.model.Person;
import com.example.demo.service.PersonService;
import lombok.NonNull;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Optional;

@Controller
@RequestMapping("/person")
@RestController
public class PersonController {

    // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data


    private  PersonService personService;
    @Autowired
    private PersonRepository personRepository;

    public PersonController(PersonService personService) {
        this.personService = personService;
    }

    @PostMapping
    public @ResponseBody Person addPerson(@NonNull @RequestBody Person person) {
            personService.addPerson(person);
            personRepository.save(person);
            return person;
    }

    @GetMapping
    public List<Person> getAllPeople() {
        return (List<Person>) personRepository.findAll();
    }

    @GetMapping(path = "{id}")
    public Optional<Person> getPersonById(@PathVariable("id") int id) {
        return personRepository.findById(id);
    }


    @DeleteMapping(path = "{id}")
    public void deletePersonById(@PathVariable("id") int id) {
        personService.deletePerson(id);
        if(personRepository.existsById(id)){
            Person person = personRepository.findById(id).get();
            personRepository.deleteById(id);
        }
    }

    @PutMapping(path = "{id}")
    public void updatePerson(@PathVariable("id") int id, @NonNull @RequestBody Person personToUpdate) {
        personService.updatePerson(id, personToUpdate);
        if(personRepository.existsById(id)){
            Person person = personRepository.findById(id).get();
            person.setName(personToUpdate.getName());
            personRepository.save(person);
        }
    }
}
